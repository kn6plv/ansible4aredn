#! /usr/bin/ucode

import * as fs from "fs";

function execute(args)
{
    const result = { changed: false, failed: false };

    if (!args.paths || !args.patterns) {
        result.failed = true;
        result.msg = "bad parameters";
    }
    else {
        const files = [];
        let cmd = "find ";
        for (let p = 0; p < length(args.paths); p++) {
            if (fs.stat(args.paths[p])?.type == "directory") {
                cmd += `${args.paths[p]} `;
            }
        }
        if (length(cmd) > 5) {
            for (let p = 0; p < length(args.patterns); p++) {
                cmd += `-name '${args.patterns[p]}' -o `;
            }
            cmd = substr(cmd, 0, -4);
            const f = fs.popen(cmd);
            if (f) {
                for (let entry = f.read("line"); length(entry); entry = f.read("line")) {
                    push(files, { path: trim(entry) });
                }
                f.close();
            }
        }
        result.files = files;
    }

    return result;
}

// Boilerplate below --
// WANT_JSON

try {
    const result = execute(json(fs.readfile(ARGV[0])));
    if (result.failed !== false) {
        result.failed = true;
    }
    if (result.changed !== false) {
        result.changed = true;
    }
    return printf("%J", result);
}
catch (e) {
    return printf("%J", { failed: true, changed: false, msg: e });
}
